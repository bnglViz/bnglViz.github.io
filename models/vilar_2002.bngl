begin model
begin parameters
 k1  0.01
 k2  0.2
 k3  0.5
 k4  1
 k5  2
 k6  10
 k7  50
 k8 100
 k9  500 
 k10 5

end parameters
begin molecular types    # define molecules present in the simulation

  DNA(p,r)
  AmRNA
  RmRNA
  A(b)
  R(a)
  C
 trash
  
end molecular types
begin seed species      # initial conditions

  DNA(p,r)  1
  AmRNA  0
  RmRNA  0
  A(b)  0
  R(a)  0
  C  
  trash

end seed species
begin observables       # model outputs

  Molecules A    A
  Molecules R    R
  
end observables
begin reaction rules

  1  DNA(p) ->  DNA(p) + AmRNA    k7
  DNA(r) -> DNA(r) + RmRNA    k1
  DNA(p!1).A(b!1) -> DNA(p!1).A(b!1) + AmRNA  k9
  DNA(r!1).A(b!1) -> DNA(r!1).A(b!1) + RmRNA  k7
  DNA(p,r) + A(b) <-> DNA(p!1,r).A(b!1) k4, k7
  DNA(p,r) + A(b) <-> DNA(p,r!1).A(b!1) k4, k8
  AmRNA ->AmRNA + A(b) k7  #if missing AmRNA on product side, result is off by order of magnitude
  RmRNA -> RmRNA + R(a) k10  #if missing RmRNA on product side, result is off by order of magnitude
  AmRNA -> trash k6
  RmRNA -> trash k3
  A(b) -> trash k4
  R(a) -> trash k2
  A(b) + R(a) -> C k5
  C -> R(a) k4

end reaction rules
end model

## model ACTIONS
# generate network of all species and reactions
generate_network({overwrite=>1,max_iter=>12,max_agg=>12});

saveConcentrations();             # Save concentrations (in memory) for later use.
simulate_ode({suffix=>ode,t_start=>0,t_end=>400,n_steps=>1200});

resetConcentrations();            # reset concentrations to last saved values.
simulate_ssa({suffix=>ssa,t_start=>0,t_end=>12,n_steps=>120});

writeSBML();                   # Output file as SBML.